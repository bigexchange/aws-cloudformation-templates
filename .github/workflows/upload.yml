name: AWS Cloudformation Templates Actions

on:
  pull_request:
    branches:
      - '*'

jobs:
  s3-upload:
    name: Upload scanner.yaml
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from Prod account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::835626702473:role/github-actions-aws-cloud-formation-templates-role
          aws-region: us-east-1

      - name: Determine branch name
        id: get_branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] || [ "${{ github.event_name }}" == "pull_request_target" ]; then
            echo "branch=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            branch_name=${GITHUB_REF#refs/heads/}
            echo "branch=$branch_name" >> $GITHUB_ENV
          fi

      - name: Upload scanner.yaml to S3
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            aws s3 cp bigid/solutions/CloudNativeScanner/scanner.yaml s3://bigid-cloudformation-templates/scanner.yaml --acl public-read
          else
            aws s3 cp bigid/solutions/CloudNativeScanner/scanner.yaml s3://bigid-cloudformation-templates/scanner-${{ env.branch }}.yaml --acl public-read
          fi

  lambda-upload:
    needs: s3-upload
    name: Build Lambda and Push To S3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.0"

      - name: Install dependencies
        run: |
          cd bigid/solutions/CloudNativeScanner/ecs-scaler-lambda/
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target ./package

      - name: Prepare package
        run: |
          cd bigid/solutions/CloudNativeScanner/ecs-scaler-lambda/
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          deactivate
          mkdir -p package
          cp -R venv/lib/python3.11/site-packages/* package/
          cp ecs_scaler_lambda.py package/
          cd package
          zip -r ../ecs-scaler-lambda.zip .

      - name: Configure AWS credentials from Prod account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::835626702473:role/github-actions-aws-cloud-formation-templates-role
          aws-region: us-east-1

      - name: Determine branch name
        id: get_branch
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] || [ "${{ github.event_name }}" == "pull_request_target" ]; then
            echo "branch=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            branch_name=${GITHUB_REF#refs/heads/}
            echo "branch=$branch_name" >> $GITHUB_ENV
          fi

      - name: Upload Lambda function to S3
        run: |
          LAMBDA_VERSION=$(yq -r '.Resources.ECSScalerLambdaVersion.Properties.Description' ./bigid/solutions/CloudNativeScanner/scanner.yaml)
          echo "Lambda version: $LAMBDA_VERSION"
          cd bigid/solutions/CloudNativeScanner/ecs-scaler-lambda/
          if [ "${{ github.ref_name }}" == "main" ]; then
            aws s3 cp ecs-scaler-lambda.zip s3://bigid-ecs-lambda-scaler-us-east-1/ecs-scaler-lambda-${LAMBDA_VERSION}.zip --acl public-read
          else
            aws s3 cp ecs-scaler-lambda.zip s3://bigid-ecs-lambda-scaler-us-east-1/ecs-scaler-lambda-$LAMBDA_VERSION-${{ env.branch }}.zip --acl public-read
          fi
